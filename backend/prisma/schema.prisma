// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String

  loginAttempts        Int      @default(0)
  loginRestrictedUntil DateTime @default("1989-12-31T21:00:00.000Z")

  createdAt DateTime @default(now())
  Board     Board[]
}

model Board {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  List      List[]
}

model List {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  userId String @db.ObjectId

  boardId String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task      Task[]
}

model Task {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  userId String @db.ObjectId

  listId String @db.ObjectId
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
